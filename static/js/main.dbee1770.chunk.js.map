{"version":3,"sources":["components/Header.js","components/Profile.js","components/Experience.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","updateContent","target","setState","mode","content","state","form","handleChange","e","name","value","title","phone","email","this","id","className","type","onChange","onClick","React","Component","Profile","handleProfileChange","event","profile","updateProfile","Experience","saveEdit","uid","updates","experiences","map","exp","createForm","uniqid","company","date","description","deleteExp","filter","renderExperiences","EXP","job","Job","switchToEdit","defaultMode","undefined","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbee1770.chunk.js","sourcesContent":["import React from \"react\";\nimport {AiFillPhone} from \"react-icons/ai\";\nimport {MdEmail} from \"react-icons/md\";\nimport {IoIosSave} from \"react-icons/io\";\nimport {FiEdit} from \"react-icons/fi\";\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // true == preview mode, false == edit mode\n        this.state = {\n            name: {\n                mode: true,\n                content: \"Dennis  Ritchie\", \n            },\n            title: {\n                mode: true,\n                content: \"Computer Scientist\",\n            },\n            phone: {\n                mode: true,\n                content: \"+62-8979253935\"\n            },\n            email: {\n                mode: true,\n                content: \"mac.alistair@gmail.com\"\n            },\n            form: {\n                name: \"Dennis  Ritchie\",\n                title: \"Computer Scientist\",\n                phone: \"+62-8979253935\",\n                email: \"mac.alistair@gmail.com\"\n            }\n        }\n    }\n\n    updateContent = target => {\n        return () => {\n            this.setState({\n                [target]: {\n                    mode: true,\n                    content: this.state.form[target]\n                }\n            });\n        }\n    }\n\n    // NOTE TO SELF\n    // REACT PARTIAL STATE UPDATE\n    // THIS CODE BELOW CHANGES OTHER FORM PROPERTIES TO UNDEFINED ! \n    // handleChange = target => {\n    //     return event => {\n    //         this.setState({\n    //             form: {\n    //                 [target]: event.target.value,\n    //             }\n    //         });    \n    //     }\n    // }\n\n    handleChange = e => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value,\n            }\n        });    \n    }\n\n    render() {\n        const {mode} = this.props;\n        const {name, title, phone, email, form} = this.state;\n\n        return (\n            <div id=\"cv-header\">\n                <div className=\"person\">\n                    <div className=\"flex flex-ai-c flex-jc-sb\">\n                        {name.mode ? \n                            <div className=\"person-name\">{name.content}</div>\n                            :\n                            <>\n                                {mode ?\n                                    <div className=\"person-name\">{name.content}</div>\n                                    :\n                                    <input type=\"text\" value={form.name} name=\"name\" onChange={this.handleChange}/>\n                                }\n                            </>\n                        }\n                        {!mode &&\n                            <>\n                                {name.mode ? \n                                    <FiEdit className=\"icon medium stroke\" onClick={() => this.setState({name: {...this.state.name, mode: false}})} />\n                                    :\n                                    <IoIosSave className=\"icon medium fill\" onClick={this.updateContent(\"name\")} />        \n                                }\n                            </>                            \n                        }\n                    </div>\n\n                    <div className=\"thick-line\"></div>\n\n                    <div className=\"flex flex-ai-c flex-jc-sb\">\n                        {title.mode ?\n                            <div className=\"person-title\">{title.content}</div>\n                            :\n                            <>\n                                {mode ? \n                                    <div className=\"person-title\">{title.content}</div>\n                                    :\n                                    <input type=\"text\" value={form.title} name=\"title\" onChange={this.handleChange}/>\n                                }\n                            </>\n                        }\n                        {!mode && \n                            <>\n                                {title.mode ?\n                                    <FiEdit className=\"icon medium stroke\" onClick={() => this.setState({title: {...this.state.title, mode: false}})} />\n                                    :\n                                    <IoIosSave className=\"icon medium fill\" onClick={this.updateContent(\"title\")} />        \n                                }\n                            </>\n                        }\n                    </div>\n                </div>\n                    \n                <div className=\"cv-contact\">\n                    <div className=\"contact-item\">\n                        <AiFillPhone className=\"icon small fill\" />\n                        {phone.mode ?\n                            <div className=\"contact-content\">{phone.content}</div>\n                            :\n                            <>\n                                {mode ? \n                                    <div className=\"contact-content\">{phone.content}</div>\n                                    :\n                                    <input type=\"text\" value={form.phone} name=\"phone\" onChange={this.handleChange} />\n                                }\n                            </>\n                        }    \n                        {!mode && \n                            <>\n                                {phone.mode ?\n                                    <FiEdit className=\"icon small stroke\" onClick={() => this.setState({phone: {...this.state.phone, mode: false}})} />\n                                    :\n                                    <IoIosSave className=\"icon small fill\" onClick={this.updateContent(\"phone\")} />                        \n                                }\n                            </>\n                        }\n                    </div>\n                    \n                    <div className=\"contact-item\">\n                        <MdEmail className=\"icon small fill\" />\n                        {email.mode ?\n                            <div className=\"contact-content\">{email.content}</div>\n                            :\n                            <>\n                                {mode ? \n                                    <div className=\"contact-content\">{email.content}</div>\n                                    :\n                                    <input type=\"text\" value={form.email} name=\"email\" onChange={this.handleChange} />\n                                }\n                            </>\n                        }\n                        {!mode && \n                            <>\n                                {email.mode ?\n                                    <FiEdit className=\"icon small stroke\" onClick={() => this.setState({email: {...this.state.email, mode: false}})} />\n                                    :\n                                    <IoIosSave className=\"icon small fill\" onClick={this.updateContent(\"email\")} />    \n                                }\n                            </>\n                        }\n                    </div> \n                </div>               \n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from \"react\";\nimport {IoIosSave} from \"react-icons/io\";\nimport {FiEdit} from \"react-icons/fi\";\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            profile: {\n                mode: true,\n                content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\" +\n                \"tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\" +\n                \"quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\" \n            }\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            form: {\n                profile: this.state.profile.content\n            }\n        })\n    }\n\n    handleProfileChange = event => {\n        this.setState({form: {profile: event.target.value}});\n    }\n\n    updateProfile = () => {\n        this.setState({\n            profile: {\n                mode: true,\n                content: this.state.form.profile\n            }\n        })\n    }\n\n\n    render() {\n        return (\n            <div id=\"cv-profile\">\n                <div className=\"flex flex-ai-c\">\n                    <span className=\"section-title\">Profile</span>\n                    {!this.props.mode &&\n                        <>\n                            {this.state.profile.mode ?\n                                <FiEdit className=\"icon medium stroke\"  onClick={(() => this.setState({profile:{...this.state.profile, mode: false}}))} />\n                                :\n                                <IoIosSave className=\"icon medium fill\" onClick={this.updateProfile} />\n                            }\n                        </>\n                    }\n                </div>\n\n                {this.state.profile.mode ? \n                    <div className=\"profile-content\">\n                        <p>\n                            {this.state.profile.content}\n                        </p>\n                    </div>\n                    :\n                    <>\n                        {this.props.mode ? \n                            <div className=\"profile-content\">\n                                <p>\n                                    {this.state.profile.content}\n                                </p>\n                            </div>\n                            :\n                            <div className=\"profile-content\">\n                                <textarea type=\"text\" value={this.state.form.profile} onChange={this.handleProfileChange}/>\n                            </div>\n                        }\n                    </>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React from \"react\";\nimport uniqid from \"uniqid\";\nimport {IoIosSave} from \"react-icons/io\";\nimport {FiEdit} from \"react-icons/fi\";\nimport {AiOutlineDelete} from \"react-icons/ai\";\nimport {MdCreateNewFolder} from \"react-icons/md\";\n\nclass Experience extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            experiences: [\n                {\n                    id: uniqid(),\n                    title: \"Software Engineer\",\n                    company: \"Sun Microsystem\",\n                    date: \"1995 - 2005\",\n                    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\" \n                },\n                {\n                    id: uniqid(),\n                    title: \"Senior Software Engineer\",\n                    company: \"Sun Microsystem\",\n                    date: \"2005 - 2012\",\n                    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\"\n                },\n                {\n                    id: uniqid(),\n                    title: \"CTO\",\n                    company: \"Sun Microsystem\",\n                    date: \"2012 - Present\",\n                    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\" \n                }\n            ], \n        }\n    }\n\n    saveEdit = (uid, updates) => {\n        this.setState({\n            experiences: this.state.experiences.map(exp => exp.id === uid ? {...exp, ...updates} : exp)\n        })\n    }\n\n    createForm = () => {\n        this.setState({\n            experiences: [...this.state.experiences, {mode: false, id: uniqid(), title: \"\", company: \"\", date: \"\", description:\"\"}]\n        })\n    }\n\n    deleteExp = (uid) => {\n        this.setState({\n            experiences: this.state.experiences.filter(exp => exp.id !== uid )\n        }) \n    }\n\n    renderExperiences = (EXP) => {\n        return EXP.map(exp => (\n            <Job mode={this.props.mode} job={exp} \n                saveEdit={this.saveEdit} deleteExp={this.deleteExp} key={uniqid()}\n            />\n        ))    \n    }\n\n    render() {\n        return (\n            <div id=\"cv-experience\">\n                <span className=\"section-title\">Work Experience</span>\n                <div id=\"job-list\">\n                    {this.renderExperiences(this.state.experiences)}\n                </div>\n                {!this.props.mode &&\n                    <MdCreateNewFolder className=\"icon big fill\" onClick={this.createForm}/>\n                }\n            </div>\n        );\n    }\n}\n\nclass Job extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const {title, company, date, description} = this.props.job;\n        const defaultMode = this.props.job.mode !== undefined ? this.props.job.mode : true;\n\n        this.state = {\n            mode: defaultMode,\n            title: title,\n            company: company,\n            date: date,\n            description: description\n        }\n    } \n\n    switchToEdit = () => {  \n        this.setState({mode: false});\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });        \n    }\n\n    saveEdit = () => {\n        this.props.saveEdit(this.props.job.id, {...this.state, mode: true});\n    }\n\n    render() {\n        const {mode, title, company, date, description} = this.state;\n\n        return (\n            <div className=\"job-item\">\n                <div className=\"job-control\">\n                    {!this.props.mode && \n                        <>\n                            {mode ? \n                                <FiEdit className=\"icon medium stroke\" onClick={this.switchToEdit} />\n                                :\n                                <IoIosSave className=\"icon medium fill\" onClick={this.saveEdit}/>\n                            }\n                            <AiOutlineDelete className=\"icon medium fill\" onClick={() => this.props.deleteExp(this.props.job.id)}/>\n                        </>\n                    }  \n                </div>\n                <div className=\"job-title\">\n                    {mode ? \n                        <p>{title}</p>\n                        :\n                        <input type=\"text\" name=\"title\"\n                            value={title}\n                            onChange={this.handleChange}    \n                        /> \n                    }\n                </div>\n                <div className=\"job-company-date\">\n                    {mode ?\n                        <>\n                            <p>{company}</p>\n                            <p>|</p>\n                            <p>{date}</p>\n                        </>\n                        :\n                        <>\n                            <input type=\"text\" name=\"company\"\n                                value={company}\n                                onChange={this.handleChange}\n                            /> \n                            <p>|</p>\n                            <input type=\"date\" name=\"date\"\n                                value={date}\n                                onChange={this.handleChange}\n                            /> \n                        </> \n                    }\n                </div>\n                <div className=\"job-description\">\n                    {mode ? \n                        <p>{description}</p>\n                        :\n                        <textarea name=\"description\"\n                            value={description}\n                            onChange={this.handleChange}\n                        />\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Experience;","import React from \"react\";\nimport Header from \"./Header\";\nimport Profile from \"./Profile\";\nimport Experience from \"./Experience\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // true == preview mode, false == edit mode\n    this.state = {\n      mode: true\n    }\n  }\n\n  render() {\n    const {mode} = this.state;\n    \n    return (\n      <main className=\"cv-container\">\n        <Header mode={mode} />\n        <Profile mode={mode} />\n        <Experience mode={mode} />\n        <div id=\"toggle-mode\">\n          {mode ? \n            <>\n              <div id=\"toggle-preview\" className=\"mode-active\" onClick={(() => this.setState({mode: true}))}>PREV</div>\n              <div id=\"toggle-edit\" onClick={(() => this.setState({mode: false}))}>EDIT</div>\n            </>\n            :\n            <>\n              <div id=\"toggle-preview\" onClick={(() => this.setState({mode: true}))}>PREV</div>\n              <div id=\"toggle-edit\" className=\"mode-active\" onClick={(() => this.setState({mode: false}))}>EDIT</div>\n            </>\n          }\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./css/index.css\";\nimport \"./css/helper.css\";\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}